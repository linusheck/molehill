mdp

const int xMIN = 1;
const int yMIN = 1;
const int xMAX = 11;
const int yMAX = 5;

hole int o1y in {1..5};
hole int o2y in {1..5};
hole int o3y in {1..5};
hole int o4y in {1..5};

formula at1 = y=o1y;
formula at2 = y=o2y;
formula at3 = y=o3y;
formula at4 = y=o4y;

formula near1 = x=2 | x=10;
formula near2 = x=3 | x=9;
formula near3 = x=4 | x=8;
formula near4 = x=5 | x=7;

const NUM_OBS = 4;
formula crash = visit1 | visit2 | visit3 | visit4;
formula goal = x=xMAX & y=yMAX;
formula done = goal | crash;


formula clk_next = mod(clk+1,NUM_OBS+1);
module clk
    clk : [0..NUM_OBS] init 0;

    [left]  !done & clk=0 -> (clk'=clk_next);
    [right] !done & clk=0 -> (clk'=clk_next);
    [down]  !done & clk=0 -> (clk'=clk_next);
    [up]    !done & clk=0 -> (clk'=clk_next);
    
    [detect1] !done & clk=1 -> (clk'=clk_next);
    [detect2] !done & clk=2 -> (clk'=clk_next);
    [detect3] !done & clk=3 -> (clk'=clk_next);
    [detect4] !done & clk=4 -> (clk'=clk_next);
endmodule


const double slip = 0;

formula xright  = min(x+1,xMAX);
formula xleft   = max(x-1,xMIN);
formula yup     = min(y+1,yMAX);
formula ydown   = max(y-1,yMIN);

module agent
    x : [xMIN..xMAX] init xMIN;
    y : [yMIN..yMAX] init yMIN;

    [left]  true -> 1-slip : (x'=xleft)  + slip : (y'=ydown);
    [right] true -> 1-slip : (x'=xright) + slip : (y'=yup);
    [down]  true -> 1-slip : (y'=ydown)  + slip : (x'=xright);
    [up]    true -> 1-slip : (y'=yup)    + slip : (x'=xleft);
endmodule

module visit1
    visit1 : bool init false;
    [detect1] !near1 -> true;
    [detect1]  near1 -> 0.01: (visit1'=at1) + 0.99: true;
endmodule

module visit2=visit1[visit1=visit2,detect1=detect2,near1=near2,at1=at2] endmodule
module visit3=visit1[visit1=visit3,detect1=detect3,near1=near3,at1=at3] endmodule
module visit4=visit1[visit1=visit4,detect1=detect4,near1=near4,at1=at4] endmodule